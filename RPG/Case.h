#pragma once
#include <SFML/Graphics.hpp>
#include "GameTexture.h"

enum CaseTypes
{
	GRASS,
	SAND,
	WATER,
	STONE,
	GROUND,
	GRAVEL,
	CASTLE_FLOOR,
	GRASS_BURNT,
	GRASS_DRY,
	GROUND_STONES,
	PUDDLE_GRASS,
	PUDDLE_STONE,
	PUDDLE_GROUND,

	GRASS_WATER_L,
	GRASS_WATER_R,
	GRASS_WATER_T,
	GRASS_WATER_B,

	GROUND_GRASS_HOLE_L,
	GROUND_GRASS_HOLE_R,
	GROUND_GRASS_HOLE_T,
	GROUND_GRASS_HOLE_B,

	GROUND_GRASS_DRY_HOLE_L,
	GROUND_GRASS_DRY_HOLE_R,
	GROUND_GRASS_DRY_HOLE_T,
	GROUND_GRASS_DRY_HOLE_B,

	GROUND_GRASS_L,
	GROUND_GRASS_R,
	GROUND_GRASS_T,
	GROUND_GRASS_B,

	GROUND_GRASS_DRY_L,
	GROUND_GRASS_DRY_R,
	GROUND_GRASS_DRY_T,
	GROUND_GRASS_DRY_B,

	CASTLE_WALL_L,
	CASTLE_WALL_R,
	CASTLE_WALL_T,
	CASTLE_WALL_B,

	CASTLE_FLOOR_GRASS_L,
	CASTLE_FLOOR_GRASS_T,
	CASTLE_FLOOR_GRASS_R,
	CASTLE_FLOOR_GRASS_B,

	CASTLE_FLOOR_STONE_L,
	CASTLE_FLOOR_STONE_T,
	CASTLE_FLOOR_STONE_R,
	CASTLE_FLOOR_STONE_B,

	CASTLE_FLOOR_WATER_L,
	CASTLE_FLOOR_WATER_T,
	CASTLE_FLOOR_WATER_R,
	CASTLE_FLOOR_WATER_B,

	CASTLE_FLOOR_GRAVEL_L,
	CASTLE_FLOOR_GRAVEL_T,
	CASTLE_FLOOR_GRAVEL_R,
	CASTLE_FLOOR_GRAVEL_B,

	CASTLE_FLOOR_SAND_L,
	CASTLE_FLOOR_SAND_T,
	CASTLE_FLOOR_SAND_R,
	CASTLE_FLOOR_SAND_B,

	STONE_GRASS_L,
	STONE_GRASS_R,
	STONE_GRASS_T,
	STONE_GRASS_B,

	STONE_GRASS_DRY_L,
	STONE_GRASS_DRY_R,
	STONE_GRASS_DRY_T,
	STONE_GRASS_DRY_B,

	GRAVEL_WATER_L,
	GRAVEL_WATER_R,
	GRAVEL_WATER_T,
	GRAVEL_WATER_B,

	GRAVEL_GRASS_L,
	GRAVEL_GRASS_R,
	GRAVEL_GRASS_T,
	GRAVEL_GRASS_B,

	GRAVEL_GRASS_DRY_L,
	GRAVEL_GRASS_DRY_R,
	GRAVEL_GRASS_DRY_T,
	GRAVEL_GRASS_DRY_B,

	SAND_WATER_L,
	SAND_WATER_R,
	SAND_WATER_T,
	SAND_WATER_B,

	SAND_GRASS_L,
	SAND_GRASS_R,
	SAND_GRASS_T,
	SAND_GRASS_B,

	
	CASTLE_WALL_ANGLE_L,
	CASTLE_WALL_ANGLE_T,
	CASTLE_WALL_ANGLE_R,
	CASTLE_WALL_ANGLE_B,

	STONE_GRASS_ANGLE_L,
	STONE_GRASS_ANGLE_R,
	STONE_GRASS_ANGLE_T,
	STONE_GRASS_ANGLE_B,

	STONE_GRASS_DRY_ANGLE_L,
	STONE_GRASS_DRY_ANGLE_R,
	STONE_GRASS_DRY_ANGLE_T,
	STONE_GRASS_DRY_ANGLE_B,

	GRAVEL_WATER_ANGLE_L,
	GRAVEL_WATER_ANGLE_R,
	GRAVEL_WATER_ANGLE_T,
	GRAVEL_WATER_ANGLE_B,

	GRAVEL_GRASS_ANGLE_L,
	GRAVEL_GRASS_ANGLE_R,
	GRAVEL_GRASS_ANGLE_T,
	GRAVEL_GRASS_ANGLE_B,

	GRAVEL_GRASS_DRY_ANGLE_L,
	GRAVEL_GRASS_DRY_ANGLE_R,
	GRAVEL_GRASS_DRY_ANGLE_T,
	GRAVEL_GRASS_DRY_ANGLE_B,

	SAND_WATER_ANGLE_L,
	SAND_WATER_ANGLE_R,
	SAND_WATER_ANGLE_T,
	SAND_WATER_ANGLE_B,

	SAND_GRASS_ANGLE_L,
	SAND_GRASS_ANGLE_R,
	SAND_GRASS_ANGLE_T,
	SAND_GRASS_ANGLE_B,

	GRASS_WATER_ANGLE_L,
	GRASS_WATER_ANGLE_R,
	GRASS_WATER_ANGLE_T,
	GRASS_WATER_ANGLE_B,

	GROUND_GRASS_DRY_HOLE_ANGLE_L,
	GROUND_GRASS_DRY_HOLE_ANGLE_R,
	GROUND_GRASS_DRY_HOLE_ANGLE_T,
	GROUND_GRASS_DRY_HOLE_ANGLE_B,
	
	NONE
};



class Case
{
public:
	Case(int);
	~Case();
	CaseTypes case_type = CaseTypes::NONE;

	void Update(float);
	sf::Sprite Draw(sf::Vector2f, GameTexture &reader);

private:
	void DrawDefault();
	bool SetTexture(GameTexture &textures, int id);
	sf::RenderTexture texture;
	float time = 0.0f;
};
